#!/bin/bash
# create bucket
aws s3api create-bucket --bucket zautech-video-upload --region eu-west-1 --create-bucket-configuration LocationConstraint=eu-west-1
# update bucket policy
aws s3api put-bucket-policy --bucket zautech-video-upload --policy file://iam/upload-s3-policy.json
# set cors for upload bucket
aws s3api put-bucket-cors --bucket zautech-video-upload --cors-configuration file://cors/upload-s3-cors.json
# create bucket
aws s3api create-bucket --bucket zautech-video-stream --region eu-west-1 --create-bucket-configuration LocationConstraint=eu-west-1
# update bucket policy
aws s3api put-bucket-policy --bucket zautech-video-stream --policy file://iam/stream-s3-policy.json
# set cors for upload bucket
aws s3api put-bucket-cors --bucket zautech-video-stream --cors-configuration file://cors/upload-s3-cors.json


# create transcoder preset
aws elastictranscoder create-preset --name Studivz --container mp4 --video file://transcoder/preset_video.json --audio file://transcoder/preset_audio.json --thumbnails file://transcoder/preset_thumbnails.json --description "Custom preset for video transcoding"
# create iam policy for uploading
aws iam create-policy --policy-name studivz-video-uploading --policy-document file://iam/upload-policy.json
# create role for transcoder
aws iam create-role --role-name studivz-transcoder-role --assume-role-policy-document file://iam/role-policy-document.json
# attach policies to role
aws iam attach-role-policy --role-name studivz-transcoder-role --policy-arn arn:aws:iam::033269891345:policy/studivz-video-uploading
# create pipeline for franscoder
aws elastictranscoder create-pipeline --name studivz-video-pipeline --input-bucket zautech-video-upload --output-bucket zautech-video-stream --role arn:aws:iam::033269891345:role/studivz-transcoder-role

# create role for lambdas
aws iam create-role --role-name studivz-lamda-video-role --assume-role-policy-document file://iam/lamda-video-role.json
# attach job submitter policy
aws iam attach-role-policy --role-name studivz-lamda-video-role --policy-arn arn:aws:iam::aws:policy/AmazonElasticTranscoder_JobsSubmitter
# attach policy for uploading files
aws iam attach-role-policy --role-name studivz-lamda-video-role --policy-arn arn:aws:iam::033269891345:policy/studivz-video-uploading
# create policy for logging
aws iam create-policy --policy-name studivz-lambda-logging --policy-document file://iam/upload-policy.json
# attach policy for logging
aws iam attach-role-policy --role-name studivz-lamda-video-role --policy-arn arn:aws:iam::033269891345:policy/studivz-lambda-logging

# create function for generating signed urls
aws lambda create-function --function-name studivz-transcode-videos-get-url --zip-file fileb://lambda/studivz-transcode-videos-get-url/index.zip --handler index.handler --runtime nodejs6.10 --role arn:aws:iam::033269891345:role/studivz-lamda-video-role --environment Variables="{BUCKET=studivz-video-upload,AUTH_DOMAIN=studivz.vinidev.com}"

# create function for generating urls
aws lambda create-function --function-name studivz-transcode-videos --zip-file fileb://lambda/studivz-transcode-videos/index.zip --handler index.handler --runtime nodejs6.10 --role arn:aws:iam::033269891345:role/studivz-lamda-video-role --environment Variables="{PIPELINE_ID=1540293809025-yh2xnu,PRESET_ID=1540285878044-7wh12n}"
# attach policy to function so the s3 bucket can invoke it
aws lambda add-permission --function-name studivz-transcode-videos --statement-id studivz-transcode-videos-invoke --action lambda:InvokeFunction --principal s3.amazonaws.com --source-arn "arn:aws:s3:::zautech-video-upload"
# add bucket create notification
aws s3api put-bucket-notification-configuration --bucket zautech-video-upload --notification-configuration file://lambda/upload-bucket-create-notification.json

#create api gateway
aws apigateway import-rest-api --body file://api_gateway/studivz-video-upload-prod-swagger-apigateway.json


